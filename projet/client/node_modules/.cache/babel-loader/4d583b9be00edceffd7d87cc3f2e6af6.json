{"ast":null,"code":"var _jsxFileName = \"/home/debian/hosting/projet/client/src/pages/Home/Home.js\";\nimport React from \"react\"; //import { Component } from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, Container, Alert } from 'react-bootstrap';\nimport Lobby from './components/Lobby';\nimport Pool from './components/Pool';\nimport Select from 'react-select';\nimport io, { Socket } from \"socket.io-client\"; //import App from \"../../App\";\n//import Profil from \"../Profil/Profil\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  value: '4',\n  label: '4'\n}, {\n  value: '5',\n  label: '5'\n}, {\n  value: '6',\n  label: '6'\n}];\nlet lobbySocket;\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleJoin = async gameId => {\n      await fetch(`http://135.125.101.210:5000/exist/${gameId}`).then(response => response.json()).then(json => {\n        if (json[0].bool === 0) {\n          const msg = {\n            type: 'pool',\n            title: \"Lobby not found\",\n            txt: \"The lobby you want to join no longer exists, if the lobby is still displ               ayed, please contact an administrator\",\n            variant: 'danger'\n          };\n          this.setState({\n            message: msg\n          });\n          return 0;\n        }\n      });\n\n      if (this.state.pseudo === undefined) {\n        if (localStorage.getItem('Pseudo') === undefined) {\n          if (localStorage.getItem('guestPseudo') !== undefined) {\n            this.setState({\n              pseudo: localStorage.getItem('guestPseudo')\n            });\n          } else {\n            alert('VOUS DEVEZ VOUS ENREGISTRER EN GUEST OU AVEC VOTRE COMPTE.');\n          }\n\n          this.setState({\n            pseudo: localStorage.getItem('Pseudo')\n          });\n          alert(\"Votre pseudo n'a pas été pris en compte, veuillez réessayer\");\n          return 0;\n        }\n      }\n\n      if (this.state.message.txt === undefined) {\n        lobbySocket.emit('playerJoin', {\n          gid: gameId,\n          user: this.state.pseudo,\n          token: 0\n        });\n        this.setState({\n          gameId: gameId\n        });\n      }\n    };\n\n    this.launchGame = () => {\n      const lobby = this.state.lobby;\n      const gameId = this.state.gameId;\n      fetch('http://135.125.101.210:5000/deck', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          \"Acces-Control-Allow-Origin\": \"true\"\n        },\n        body: JSON.stringify({\n          gameId: gameId,\n          lobby: lobby\n        })\n      });\n      const copyLobby = this.state.lobby;\n      const user = this.state.pseudo;\n      let index;\n      copyLobby.map((data, keys) => {\n        if (data.user === user) {\n          index = keys;\n        }\n      });\n      let orderedLobby;\n\n      switch (index) {\n        case 0:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          break;\n\n        case 1:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby[copyLobby.length - 1] = data;\n            } else {\n              orderedLobby[keys - 1] = data;\n            }\n          });\n          break;\n\n        case 2:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby[copyLobby.length - 2] = data;\n            } else if (keys === 1) {\n              orderedLobby[copyLobby.length - 1] = data;\n            } else {\n              orderedLobby[keys - 1] = data;\n            }\n          });\n          break;\n\n        case 3:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby[copyLobby.length - 3] = data;\n            } else if (keys === 1) {\n              orderedLobby[copyLobby.length - 2] = data;\n            } else if (keys === 2) {\n              orderedLobby[copyLobby.length - 1] = data;\n            } else {\n              orderedLobby[keys - 1] = data;\n            }\n          });\n          break;\n\n        case 4:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby[copyLobby.length - 4] = data;\n            } else if (keys === 1) {\n              orderedLobby[copyLobby.length - 3] = data;\n            } else if (keys === 2) {\n              orderedLobby[copyLobby.length - 2] = data;\n            } else if (keys === 3) {\n              orderedLobby[copyLobby.length - 1] = data;\n            } else {\n              orderedLobby[keys - 1] = data;\n            }\n          });\n          break;\n\n        case 5:\n          copyLobby.split(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby[copyLobby.length - 5] = data;\n            } else if (keys === 1) {\n              orderedLobby[copyLobby.length - 4] = data;\n            } else if (keys === 2) {\n              orderedLobby[copyLobby.length - 3] = data;\n            } else if (keys === 3) {\n              orderedLobby[copyLobby.length - 2] = data;\n            } else if (keys === 4) {\n              orderedLobby[copyLobby.length - 1] = data;\n            } else {\n              orderedLobby[keys - 1] = data;\n            }\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      localStorage.setItem('user', user);\n      localStorage.setItem('gameId', gameId);\n      localStorage.setItem('turn', orderedLobby);\n      lobbySocket.emit('launchGame', gameId);\n      window.location.href = \"http://135.125.101.210/game\";\n    };\n\n    this.resetMessage = () => {\n      const error = {\n        title: undefined,\n        txt: undefined,\n        variant: undefined\n      };\n      this.setState({\n        message: error\n      });\n    };\n\n    this.showMessage = () => {\n      if (this.state.message.type === 'pool') {\n        lobbySocket.emit('refreshPool');\n      }\n\n      return /*#__PURE__*/_jsxDEV(Row, {\n        style: this.state.defStyle,\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          variant: this.state.message.variant,\n          onClose: () => this.resetMessage(),\n          dismissible: true,\n          children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n            children: this.state.message.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 21\n          }, this), this.state.message.txt]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.connexion = () => {\n      lobbySocket.on('connection', () => {\n        if (this.state.pseudo !== undefined) lobbySocket.emit('repconnection', {\n          user: this.state.pseudo\n        });\n      });\n    };\n\n    this.state = {\n      gameCode: '',\n      gameFromCode: '',\n      pseudo: undefined,\n      gameId: undefined,\n      maxPlayers: undefined,\n      playerToken: 0,\n      lobby: undefined,\n      joinedGame: undefined,\n      createGame: undefined,\n      pool: undefined,\n      connectionConfig: {\n        \"force new connection\": true,\n        \"reconnectionAttemps\": \"Infinity\",\n        \"timeout\": 75,\n        \"transports\": [\"websocket\", \"polling\"],\n        \"path\": '/app2socket'\n      },\n      endpoint: 'http://135.125.101.210:5003/app2socket',\n      message: {\n        type: undefined,\n        title: undefined,\n        txt: undefined,\n        variant: undefined\n      },\n      defStyle: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }\n    };\n    this.launchGame = this.launchGame.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLeave = this.handleLeave.bind(this);\n    lobbySocket = io.connect(this.state.endpoint, this.state.connectionConfig);\n  }\n  /**************  HOME **************/\n\n  /**********  HANDLE  **********/\n  //handle joining with a code\n\n\n  handleCreate(event) {\n    event.preventDefault();\n    let isIn = false;\n\n    if (this.state.pseudo === undefined) {\n      if (localStorage.getItem('Pseudo') === undefined) {\n        if (localStorage.getItem('guestPseudo') !== undefined) {\n          this.setState({\n            pseudo: localStorage.getItem('guestPseudo')\n          });\n        } else {\n          alert('VOUS DEVEZ VOUS ENREGISTRER EN GUEST OU AVEC VOTRE COMPTE.');\n        }\n\n        this.setState({\n          pseudo: localStorage.getItem('Pseudo')\n        });\n        alert(\"Votre pseudo n'a pas été pris en compte, veuillez réessayer\");\n        return 0;\n      }\n    }\n\n    for (let item of this.state.pool) {\n      if (this.state.gameId === item.gameId) {\n        isIn = true;\n      }\n    }\n\n    if (!isIn) {\n      lobbySocket.emit('createLobby', {\n        gid: this.state.gameId,\n        mpv: this.state.maxPlayers.value\n      });\n    } else {\n      alert(\"This name is already used\");\n    }\n  }\n\n  async handleOwnerJoin(gameId, pseudo) {\n    //puts himself in the lobby as owner\n    lobbySocket.emit('repGameCreated', {\n      user: pseudo,\n      gid: gameId,\n      token: 1\n    });\n    this.setState({\n      playerToken: 1,\n      gameId: gameId,\n      createGame: undefined\n    });\n    localStorage.setItem(\"gameId\", gameId);\n    localStorage.setItem(\"pseudo\", pseudo);\n  }\n\n  handleLobby() {\n    this.setState({\n      createGame: true\n    });\n  }\n\n  handleExitCreate() {\n    this.setState({\n      createGame: undefined\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefault();\n    await fetch(`http://135.125.101.210:5000/game/${this.state.gameCode}`).then(response => response.json()).then(json => {\n      localStorage.setItem(\"joinedGame\", json[0].gameId);\n    });\n    this.setState({\n      gameFromCode: localStorage.getItem(\"joinedGame\")\n    });\n    await fetch(`http://135.125.101.210:5000/lobby/${localStorage.getItem(\"joinedGame\")}`).then(response => response.json()).then(json => {\n      this.setState({\n        lobby: json\n      });\n    });\n    let index = undefined;\n\n    for (let item in this.state.pool) {\n      if (this.state.pool[item].gameId === localStorage.getItem(\"joinedGame\")) {\n        index = item;\n      }\n    }\n\n    if (this.state.pool[index].currPlayers >= this.state.pool[index].maxPlayers) {\n      localStorage.removeItem(\"joinedGame\");\n      this.setState({\n        gameFromCode: undefined\n      });\n      alert('lobby is full');\n    } else {\n      await fetch('http://135.125.101.210:5000/lobbyp', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          \"Acces-Control-Allow-Origin\": \"true\"\n        },\n        body: JSON.stringify({\n          gameId: localStorage.getItem(\"joinedGame\"),\n          pseudo: this.state.pseudo,\n          token: 1\n        })\n      });\n      await fetch('http://135.125.101.210:5000/icount', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          \"Acces-Control-Allow-Origin\": \"true\"\n        },\n        body: JSON.stringify({\n          gameId: localStorage.getItem(\"joinedGame\")\n        })\n      });\n      await fetch(`http://135.125.101.210:5000/token/${localStorage.getItem(\"joinedGame\")}/${this.state.pseudo}`).then(response => response.json()).then(json => {\n        this.setState({\n          playerToken: json[0].token\n        });\n      });\n      this.setState({\n        joinedGame: localStorage.getItem(\"joinedGame\")\n      });\n      await fetch(`http://135.125.101.210:5000/lobby/${localStorage.getItem(\"joinedGame\")}`).then(response => response.json()).then(json => {\n        this.setState({\n          lobby: json\n        });\n      });\n    }\n  } //handle joining a game\n\n\n  //handle leaving a lobby\n  handleLeave() {\n    const gameId = this.state.joinedGame;\n\n    if (this.state.playerToken === 0) {\n      lobbySocket.emit('playerLeaving', {\n        gid: gameId,\n        user: this.state.pseudo\n      });\n      this.setState({\n        joinedGame: undefined,\n        gameId: undefined\n      });\n    } else if (this.state.playerToken === 1) {\n      lobbySocket.emit('ownerLeaving', {\n        gid: gameId\n      });\n      this.setState({\n        joinedGame: undefined,\n        playerToken: 0,\n        gameId: undefined\n      });\n    }\n  }\n\n  async handleRefresh(gameId) {\n    await fetch(`http://135.125.101.210:5000/lobby/${gameId}`).then(response => response.json()).then(json => {\n      this.setState({\n        lobby: json\n      });\n    });\n  }\n\n  async handleRefreshGames() {\n    await fetch('http://135.125.101.210:5000/pool').then(response => response.json()).then(json => {\n      this.setState({\n        pool: Object.values(json)\n      });\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://135.125.101.210:5000/pool').then(response => response.json()).then(json => {\n      this.setState({\n        pool: Object.values(json)\n      });\n    });\n\n    if (localStorage.getItem(\"Pseudo\") === undefined) {\n      if (localStorage.getItem(\"guestPseudo\") !== undefined) {\n        lobbySocket.on('connection', data => {\n          lobbySocket.emit('repconnexion', {\n            user: localStorage.getItem(\"guestPseudo\")\n          });\n          this.setState({\n            pseudo: localStorage.getItem(\"guestPseudo\")\n          });\n        });\n      }\n    }\n\n    this.setState({\n      pseudo: localStorage.getItem(\"Pseudo\")\n    });\n    const pseudo = this.state.pseudo;\n    const gameId = this.state.gameId;\n    /*lobbySocket.on('playerDisconnect', (sdata) => {\n        const userDisc = sdata.id\n        const copyLobby = this.state.lobby\n        const index = copyLobby.indexOf(userDisc);\n        copyLobby.splice(index, 1)\n        this.setState({ lobby: copyLobby })\n    })*/\n\n    lobbySocket.on('lobbyCreated', sdata => {\n      this.handleOwnerJoin(sdata.gid, this.state.pseudo);\n    });\n    lobbySocket.on('ownerInfoLobby', data => {\n      const gameId = this.state.gameId;\n      this.setState({\n        joinedGame: gameId,\n        lobby: data\n      });\n    });\n    lobbySocket.on('playerJoinLobby', data => {\n      const gameId = this.state.gameId;\n      this.setState({\n        lobby: data,\n        joinedGame: gameId\n      });\n    });\n    lobbySocket.on('repPlayerJoin', data => {\n      this.setState({\n        joinedGame: gameId,\n        lobby: data,\n        playerToken: 0\n      });\n    });\n    lobbySocket.on('chanPlayerLeaving', data => {\n      this.setState({\n        lobby: data\n      });\n    });\n    lobbySocket.on('createLobby', data => {\n      this.setState({\n        pool: Object.values(data)\n      });\n    });\n    lobbySocket.on('closeLobby', sdata => {\n      lobbySocket.emit('closedLobby', sdata);\n      this.handleRefreshGames();\n      this.setState({\n        pool: Object.values(sdata)\n      });\n    });\n    lobbySocket.on('refreshedPool', sdata => {\n      this.setState({\n        pool: Object.values(sdata)\n      });\n    });\n    lobbySocket.on('joinGame', sdata => {\n      const user = this.state.pseudo;\n      const gameId = sdata;\n      const copyLobby = this.state.lobby.slice();\n      let index;\n      copyLobby.map((data, keys) => {\n        if (data.user === user) {\n          index = keys;\n        }\n      });\n      let orderedLobby;\n\n      switch (index) {\n        case 0:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            orderedLobby.splice(keys, 1, data.user);\n          });\n          break;\n\n        case 1:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby.splice(copyLobby.length - 1, 1, data.user);\n            } else {\n              orderedLobby.splice(keys - 1, 1, data.user);\n            }\n          });\n          break;\n\n        case 2:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby.splice(copyLobby.length - 2, 1, data.user);\n            } else if (keys === 1) {\n              orderedLobby.splice(copyLobby.length - 1, 1, data.user);\n            } else {\n              orderedLobby.splice(keys - 1, 1, data.user);\n            }\n          });\n          break;\n\n        case 3:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby.splice(copyLobby.length - 3, 1, data.user);\n            } else if (keys === 1) {\n              orderedLobby.splice(copyLobby.length - 2, 1, data.user);\n            } else if (keys === 2) {\n              orderedLobby.splice(copyLobby.length - 1, 1, data.user);\n            } else {\n              orderedLobby.splice(keys - 1, 1, data.user);\n            }\n          });\n          break;\n\n        case 4:\n          copyLobby.splice(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby.splice(copyLobby.length - 4, 1, data.user);\n            } else if (keys === 1) {\n              orderedLobby.splice(copyLobby.length - 3, 1, data.user);\n            } else if (keys === 2) {\n              orderedLobby.splice(copyLobby.length - 2, 1, data.user);\n            } else if (keys === 3) {\n              orderedLobby.splice(copyLobby.length - 1, 1, data.user);\n            } else {\n              orderedLobby.splice(keys - 1, 1, data.user);\n            }\n          });\n          break;\n\n        case 5:\n          copyLobby.split(index, 1);\n          orderedLobby = copyLobby.slice();\n          copyLobby.map((data, keys) => {\n            if (keys === 0) {\n              orderedLobby.splice(copyLobby.length - 5, 1, data.user);\n            } else if (keys === 1) {\n              orderedLobby.splice(copyLobby.length - 4, 1, data.user);\n            } else if (keys === 2) {\n              orderedLobby.splice(copyLobby.length - 3, 1, data.user);\n            } else if (keys === 3) {\n              orderedLobby.splice(copyLobby.length - 2, 1, data.user);\n            } else if (keys === 4) {\n              orderedLobby.splice(copyLobby.length - 1, 1, data.user);\n            } else {\n              orderedLobby.splice(keys - 1, 1, data.user);\n            }\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      localStorage.setItem('turn', orderedLobby);\n      localStorage.setItem('user', user);\n      localStorage.setItem('gameId', gameId);\n      window.location.href = \"http://135.125.101.210/game\";\n    });\n  }\n\n  render() {\n    if (this.state.joinedGame) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: '2px solid moccasin',\n            borderRadius: '10px',\n            backgroundColor: 'palegoldenrod'\n          },\n          children: [\" \", this.state.message.txt === undefined ? /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 65\n          }, this) : this.showMessage(), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [\"Lobby: \", this.state.joinedGame]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Players:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 594,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 593,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Lobby, {\n            userLobby: Object.values(this.state.lobby),\n            actionLaunchGame: this.launchGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              fluid: true,\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                className: \"justify-content-md-center\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  fluid: true,\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-info\",\n                    onClick: this.handleLeave,\n                    block: true,\n                    children: \"Leave\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  fluid: true,\n                  children: this.state.playerToken === 1 ? this.state.lobby.length >= 4 ? /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-info\",\n                    onClick: () => this.launchGame(),\n                    block: true,\n                    children: \" Start Game \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 104\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-secondary\",\n                    block: true,\n                    disabled: true,\n                    children: \" Start Game \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 199\n                  }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 610,\n                    columnNumber: 274\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 17\n      }, this);\n    } else if (this.state.createGame) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: '2px solid moccasin',\n            borderRadius: '10px',\n            backgroundColor: 'palegoldenrod'\n          },\n          children: [\" \", this.state.message.txt === undefined ? /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 65\n          }, this) : this.showMessage(), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Container, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  children: \"Create a game\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 632,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 633,\n                  columnNumber: 43\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  onSubmit: this.handleCreate,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Lobby's name :\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 639,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"text\",\n                      value: this.state.gameId,\n                      onChange: text => this.setState({\n                        gameId: text.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 640,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 638,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"Amount of player : \"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 645,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(Select, {\n                      options: options,\n                      value: this.state.maxPlayers,\n                      onChange: value => this.setState({\n                        maxPlayers: value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 646,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 648,\n                    columnNumber: 47\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"submit\",\n                    value: \"Create lobby\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outline-info\",\n                    size: \"lg\",\n                    onClick: () => this.handleExitCreate(),\n                    children: \"exit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 650,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 636,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 631,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 630,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 629,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 622,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            border: '2px solid moccasin',\n            borderRadius: '10px',\n            backgroundColor: 'palegoldenrod'\n          },\n          children: [\" \", this.state.message.txt === undefined ? /*#__PURE__*/_jsxDEV(\"a\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 65\n          }, this) : this.showMessage(), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-info\",\n              size: \"lg\",\n              onClick: () => this.handleLobby(),\n              children: \"Create Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 671,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: this.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Join with a code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 688,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 689,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 687,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: this.state.gameCode,\n                  onChange: text => this.setState({\n                    gameCode: text.target.value\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"submit\",\n                  value: \"Enter Game\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 694,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Find games\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 33\n              }, this), this.state.pool === undefined ? /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 66\n              }, this) : /*#__PURE__*/_jsxDEV(Pool, {\n                pool: this.state.pool,\n                actionJoin: this.handleJoin\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 75\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/home/debian/hosting/projet/client/src/pages/Home/Home.js"],"names":["React","Link","Button","Row","Col","Container","Alert","Lobby","Pool","Select","io","Socket","options","value","label","lobbySocket","Home","Component","constructor","props","handleJoin","gameId","fetch","then","response","json","bool","msg","type","title","txt","variant","setState","message","state","pseudo","undefined","localStorage","getItem","alert","emit","gid","user","token","launchGame","lobby","method","headers","Accept","body","JSON","stringify","copyLobby","index","map","data","keys","orderedLobby","splice","slice","length","split","setItem","window","location","href","resetMessage","error","showMessage","defStyle","connexion","on","gameCode","gameFromCode","maxPlayers","playerToken","joinedGame","createGame","pool","connectionConfig","endpoint","display","justifyContent","alignItems","bind","handleCreate","handleSubmit","handleLeave","connect","event","preventDefault","isIn","item","mpv","handleOwnerJoin","handleLobby","handleExitCreate","currPlayers","removeItem","handleRefresh","handleRefreshGames","Object","values","componentDidMount","sdata","render","border","borderRadius","backgroundColor","text","target"],"mappings":"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","sourcesContent":["import React from \"react\";\n//import { Component } from \"react\";\n\nimport { Link } from 'react-router-dom';\nimport { Button, Row, Col, Container, Alert } from 'react-bootstrap'\nimport Lobby from './components/Lobby'\nimport Pool from './components/Pool'\nimport Select from 'react-select'\nimport io, { Socket } from \"socket.io-client\";\n//import App from \"../../App\";\n//import Profil from \"../Profil/Profil\";\n\n\n\nconst options = [\n    { value: '4', label: '4' },\n    { value: '5', label: '5' },\n    { value: '6', label: '6' },\n]\n\nlet lobbySocket\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            gameCode: '',\n            gameFromCode: '',\n            pseudo: undefined,\n            gameId: undefined,\n            maxPlayers: undefined,\n            playerToken: 0,\n            lobby: undefined,\n            joinedGame: undefined,\n            createGame: undefined,\n            pool: undefined,\n            connectionConfig: {\n                \"force new connection\": true,\n                \"reconnectionAttemps\": \"Infinity\",\n                \"timeout\":75,\n                \"transports\": [\"websocket\",\"polling\"],\n                \"path\" : '/app2socket'\n            },\n            endpoint: 'http://135.125.101.210:5003/app2socket',\n            message: { type: undefined, title: undefined, txt: undefined, variant: undefined },\n            defStyle: { display: 'flex', justifyContent: 'center', alignItems: 'center' },\n\n        }\n        this.launchGame = this.launchGame.bind(this)\n        this.handleCreate = this.handleCreate.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleLeave = this.handleLeave.bind(this)\n        lobbySocket = io.connect(this.state.endpoint, this.state.connectionConfig);\n    }\n    /**************  HOME **************/\n\n    /**********  HANDLE  **********/\n\n    //handle joining with a code\n    handleCreate(event) {\n        event.preventDefault();\n        let isIn = false;\n        if (this.state.pseudo === undefined) {\n            if (localStorage.getItem('Pseudo') === undefined) {\n                if (localStorage.getItem('guestPseudo') !== undefined) {\n                    this.setState({ pseudo: localStorage.getItem('guestPseudo') })\n                }\n                else {\n                    alert('VOUS DEVEZ VOUS ENREGISTRER EN GUEST OU AVEC VOTRE COMPTE.')\n                }\n                this.setState({ pseudo: localStorage.getItem('Pseudo') })\n                alert(\"Votre pseudo n'a pas été pris en compte, veuillez réessayer\")\n                return 0;\n            }\n        }\n        for (let item of this.state.pool) {\n            if (this.state.gameId === item.gameId) { isIn = true }\n        }\n        if (!isIn) {\n            lobbySocket.emit('createLobby', { gid: this.state.gameId, mpv: this.state.maxPlayers.value })\n        }\n        else {\n            alert(\"This name is already used\");\n        }\n    };\n    async handleOwnerJoin(gameId, pseudo) {\n        //puts himself in the lobby as owner\n\n        lobbySocket.emit('repGameCreated', { user: pseudo, gid: gameId, token: 1 })\n        this.setState({ playerToken: 1, gameId: gameId, createGame: undefined });\n        localStorage.setItem(\"gameId\", gameId);\n        localStorage.setItem(\"pseudo\", pseudo);\n    }\n\n    handleLobby() {\n        this.setState({ createGame: true })\n    }\n    handleExitCreate() {\n        this.setState({ createGame: undefined })\n    }\n    async handleSubmit(event) {\n        event.preventDefault();\n        await fetch(`http://135.125.101.210:5000/game/${this.state.gameCode}`)\n            .then(response => response.json())\n            .then(json => {\n                localStorage.setItem(\"joinedGame\", json[0].gameId);\n            })\n        this.setState({ gameFromCode: localStorage.getItem(\"joinedGame\") });\n\n        await fetch(`http://135.125.101.210:5000/lobby/${localStorage.getItem(\"joinedGame\")}`)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ lobby: json });\n\n            })\n\n\n        let index = undefined;\n        for (let item in this.state.pool) {\n            if (this.state.pool[item].gameId === localStorage.getItem(\"joinedGame\")) {\n                index = item\n            }\n        }\n\n        if (this.state.pool[index].currPlayers >= this.state.pool[index].maxPlayers) {\n            localStorage.removeItem(\"joinedGame\");\n            this.setState({ gameFromCode: undefined });\n            alert('lobby is full');\n        }\n        else {\n            await fetch('http://135.125.101.210:5000/lobbyp', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Acces-Control-Allow-Origin\": \"true\"\n                },\n                body: JSON.stringify({\n                    gameId: localStorage.getItem(\"joinedGame\"),\n                    pseudo: this.state.pseudo,\n                    token: 1,\n                })\n            })\n\n\n            await fetch('http://135.125.101.210:5000/icount', {\n                method: 'POST',\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    \"Acces-Control-Allow-Origin\": \"true\"\n                },\n                body: JSON.stringify({\n                    gameId: localStorage.getItem(\"joinedGame\"),\n                })\n            })\n\n\n            await fetch(`http://135.125.101.210:5000/token/${localStorage.getItem(\"joinedGame\")}/${this.state.pseudo}`)\n                .then(response => response.json())\n                .then(json => {\n                    this.setState({ playerToken: json[0].token });\n                })\n\n            this.setState({ joinedGame: localStorage.getItem(\"joinedGame\") });\n\n            await fetch(`http://135.125.101.210:5000/lobby/${localStorage.getItem(\"joinedGame\")}`)\n                .then(response => response.json())\n                .then(json => {\n                    this.setState({ lobby: json });\n\n                })\n        }\n    }\n\n    //handle joining a game\n    handleJoin = async (gameId) => {\n        await fetch(`http://135.125.101.210:5000/exist/${gameId}`)\n            .then(response => response.json())\n            .then(json => {\n                if (json[0].bool === 0) {\n                    const msg = { type: 'pool', title: \"Lobby not found\", txt: \"The lobby you want to join no longer exists, if the lobby is still displ               ayed, please contact an administrator\", variant: 'danger' }\n                    this.setState({ message: msg });\n                    return 0;\n                }\n            })\n        if (this.state.pseudo === undefined) {\n            if (localStorage.getItem('Pseudo') === undefined) {\n                if (localStorage.getItem('guestPseudo') !== undefined) {\n                    this.setState({ pseudo: localStorage.getItem('guestPseudo') })\n                }\n                else {\n                    alert('VOUS DEVEZ VOUS ENREGISTRER EN GUEST OU AVEC VOTRE COMPTE.')\n                }\n                this.setState({ pseudo: localStorage.getItem('Pseudo') })\n                alert(\"Votre pseudo n'a pas été pris en compte, veuillez réessayer\")\n                return 0;\n            }\n        }\n        if (this.state.message.txt === undefined) {\n            lobbySocket.emit('playerJoin', { gid: gameId, user: this.state.pseudo, token: 0 })\n            this.setState({ gameId: gameId })\n\n\n        }\n\n    }\n\n\n\n\n\n\n    //handle leaving a lobby\n\n    handleLeave() {\n        const gameId = this.state.joinedGame;\n        if (this.state.playerToken === 0) {\n            lobbySocket.emit('playerLeaving', { gid: gameId, user: this.state.pseudo })\n            this.setState({ joinedGame: undefined, gameId: undefined });\n        }\n        else if (this.state.playerToken === 1) {\n            lobbySocket.emit('ownerLeaving', { gid: gameId })\n            this.setState({ joinedGame: undefined, playerToken: 0, gameId: undefined });\n        }\n    }\n\n\n    async handleRefresh(gameId) {\n        await fetch(`http://135.125.101.210:5000/lobby/${gameId}`)\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ lobby: json });\n            })\n    }\n\n    async handleRefreshGames() {\n        await fetch('http://135.125.101.210:5000/pool')\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ pool: Object.values(json) });\n            })\n    }\n\n    launchGame = () => {\n\n        const lobby = this.state.lobby\n        const gameId = this.state.gameId\n        fetch('http://135.125.101.210:5000/deck', {\n            method: 'POST',\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                \"Acces-Control-Allow-Origin\": \"true\"\n            },\n            body: JSON.stringify({\n                gameId: gameId,\n                lobby: lobby,\n            })\n        })\n\n        const copyLobby = this.state.lobby\n        const user = this.state.pseudo\n        let index;\n        copyLobby.map((data, keys) => {\n            if (data.user === user) {\n                index = keys\n            }\n        })\n        let orderedLobby;\n        switch (index) {\n            case 0:\n                copyLobby.splice(index, 1)\n                orderedLobby = copyLobby.slice()\n                break;\n            case 1:\n                copyLobby.splice(index, 1)\n                orderedLobby = copyLobby.slice()\n                copyLobby.map((data, keys) => {\n                    if (keys === 0) {\n                        orderedLobby[copyLobby.length - 1] = data\n                    }\n                    else {\n                        orderedLobby[keys - 1] = data\n                    }\n                })\n                break;\n            case 2:\n                copyLobby.splice(index, 1)\n                orderedLobby = copyLobby.slice()\n                copyLobby.map((data, keys) => {\n                    if (keys === 0) {\n                        orderedLobby[copyLobby.length - 2] = data\n                    } else if (keys === 1) {\n                        orderedLobby[copyLobby.length - 1] = data\n                    }\n                    else {\n                        orderedLobby[keys - 1] = data\n                    }\n                })\n                break;\n            case 3:\n                copyLobby.splice(index, 1)\n                orderedLobby = copyLobby.slice()\n                copyLobby.map((data, keys) => {\n                    if (keys === 0) {\n                        orderedLobby[copyLobby.length - 3] = data\n                    } else if (keys === 1) {\n                        orderedLobby[copyLobby.length - 2] = data\n                    }\n                    else if (keys === 2) {\n                        orderedLobby[copyLobby.length - 1] = data\n                    }\n                    else {\n                        orderedLobby[keys - 1] = data\n                    }\n                })\n                break;\n            case 4:\n                copyLobby.splice(index, 1)\n                orderedLobby = copyLobby.slice()\n                copyLobby.map((data, keys) => {\n                    if (keys === 0) {\n                        orderedLobby[copyLobby.length - 4] = data\n                    } else if (keys === 1) {\n                        orderedLobby[copyLobby.length - 3] = data\n                    } else if (keys === 2) {\n                        orderedLobby[copyLobby.length - 2] = data\n                    } else if (keys === 3) {\n                        orderedLobby[copyLobby.length - 1] = data\n                    }\n                    else {\n                        orderedLobby[keys - 1] = data\n                    }\n                })\n                break;\n            case 5:\n                copyLobby.split(index, 1)\n                orderedLobby = copyLobby.slice()\n                copyLobby.map((data, keys) => {\n                    if (keys === 0) {\n                        orderedLobby[copyLobby.length - 5] = data\n                    } else if (keys === 1) {\n                        orderedLobby[copyLobby.length - 4] = data\n                    } else if (keys === 2) {\n                        orderedLobby[copyLobby.length - 3] = data\n                    } else if (keys === 3) {\n                        orderedLobby[copyLobby.length - 2] = data\n                    } else if (keys === 4) {\n                        orderedLobby[copyLobby.length - 1] = data\n                    }\n                    else {\n                        orderedLobby[keys - 1] = data\n                    }\n                })\n                break;\n            default:\n                break;\n        }\n\n\n        localStorage.setItem('user', user)\n        localStorage.setItem('gameId', gameId)\n        localStorage.setItem('turn', orderedLobby)\n        lobbySocket.emit('launchGame', gameId)\n        window.location.href = \"http://135.125.101.210/game\"\n    }\n\n\n\n\n    /******* OTHERS FUNCTIONS *********/\n\n    resetMessage = () => {\n        const error = { title: undefined, txt: undefined, variant: undefined }\n        this.setState({ message: error })\n    }\n    showMessage = () => {\n        if (this.state.message.type === 'pool') {\n            lobbySocket.emit('refreshPool',)\n        }\n        return (\n            <Row style={this.state.defStyle}>\n                <Alert variant={this.state.message.variant} onClose={() => this.resetMessage()} dismissible>\n                    <Alert.Heading>{this.state.message.title}</Alert.Heading>\n                    {this.state.message.txt}\n                </Alert>\n            </Row>\n        )\n    }\n\n\n    connexion = () => {\n        lobbySocket.on('connection', () => {\n            if (this.state.pseudo !== undefined)\n                lobbySocket.emit('repconnection', { user: this.state.pseudo })\n        })\n\n    }\n\n\n\n    componentDidMount() {\n        fetch('http://135.125.101.210:5000/pool')\n            .then(response => response.json())\n            .then(json => {\n                this.setState({ pool: Object.values(json) });\n            })\n\n        if (localStorage.getItem(\"Pseudo\") === undefined) {\n            if (localStorage.getItem(\"guestPseudo\") !== undefined) {\n                lobbySocket.on('connection', (data) => {\n                    lobbySocket.emit('repconnexion', { user: localStorage.getItem(\"guestPseudo\") })\n                    this.setState({ pseudo: localStorage.getItem(\"guestPseudo\") })\n                })\n            }\n        }\n\n        this.setState({ pseudo: localStorage.getItem(\"Pseudo\") })\n        const pseudo = this.state.pseudo\n        const gameId = this.state.gameId\n\n\n        /*lobbySocket.on('playerDisconnect', (sdata) => {\n            const userDisc = sdata.id\n            const copyLobby = this.state.lobby\n            const index = copyLobby.indexOf(userDisc);\n            copyLobby.splice(index, 1)\n            this.setState({ lobby: copyLobby })\n        })*/\n\n        lobbySocket.on('lobbyCreated', (sdata) => {\n            this.handleOwnerJoin(sdata.gid, this.state.pseudo);\n        })\n        lobbySocket.on('ownerInfoLobby', (data) => {\n            const gameId = this.state.gameId\n            this.setState({ joinedGame: gameId, lobby: data });\n        })\n        lobbySocket.on('playerJoinLobby', (data) => {\n            const gameId = this.state.gameId\n            this.setState({ lobby: data, joinedGame: gameId })\n\n\n        })\n        lobbySocket.on('repPlayerJoin', (data) => {\n            this.setState({ joinedGame: gameId, lobby: data, playerToken: 0 })\n        })\n        lobbySocket.on('chanPlayerLeaving', (data) => {\n            this.setState({ lobby: data })\n        })\n        lobbySocket.on('createLobby', (data) => {\n            this.setState({ pool: Object.values(data) })\n        })\n        lobbySocket.on('closeLobby', (sdata) => {\n            lobbySocket.emit('closedLobby', sdata)\n            this.handleRefreshGames();\n            this.setState({ pool: Object.values(sdata) })\n        })\n        lobbySocket.on('refreshedPool', (sdata) => {\n            this.setState({ pool: Object.values(sdata) })\n        })\n        lobbySocket.on('joinGame', (sdata) => {\n            const user = this.state.pseudo\n            const gameId = sdata\n            const copyLobby = this.state.lobby.slice()\n            let index;\n            copyLobby.map((data, keys) => {\n                if (data.user === user) {\n                    index = keys\n                }\n            })\n            let orderedLobby;\n            switch (index) {\n                case 0:\n                    copyLobby.splice(index, 1)\n                    orderedLobby = copyLobby.slice()\n                    copyLobby.map((data, keys)=>{\n                        orderedLobby.splice(keys,1,data.user)\n                    })\n                    break;\n                case 1:\n                    copyLobby.splice(index, 1)\n                    orderedLobby = copyLobby.slice()\n                    copyLobby.map((data, keys) => {\n                        if (keys === 0) {\n                            orderedLobby.splice(copyLobby.length - 1 ,1,data.user)\n                        }\n                        else {\n                            orderedLobby.splice(keys - 1 ,1,data.user)\n                        }\n                    })\n                    break;\n                case 2:\n                    copyLobby.splice(index, 1)\n                    orderedLobby = copyLobby.slice()\n                    copyLobby.map((data, keys) => {\n                        if (keys === 0) {\n                            orderedLobby.splice(copyLobby.length - 2 ,1,data.user)\n                        } else if (keys === 1) {\n                            orderedLobby.splice(copyLobby.length - 1 ,1,data.user)\n                        }\n                        else {\n                            orderedLobby.splice(keys - 1 ,1,data.user)\n                        }\n                    })\n                    break;\n                case 3:\n                    copyLobby.splice(index, 1)\n                    orderedLobby = copyLobby.slice()\n                    copyLobby.map((data, keys) => {\n                        if (keys === 0) {\n                            orderedLobby.splice(copyLobby.length - 3 ,1,data.user)\n                        } else if (keys === 1) {\n                            orderedLobby.splice(copyLobby.length - 2 ,1,data.user)\n                        }\n                        else if (keys === 2) {\n                            orderedLobby.splice(copyLobby.length - 1 ,1,data.user)\n                        }\n                        else {\n                            orderedLobby.splice(keys - 1 ,1,data.user)\n                        }\n                    })\n                    break;\n                case 4:\n                    copyLobby.splice(index, 1)\n                    orderedLobby = copyLobby.slice()\n                    copyLobby.map((data, keys) => {\n                        if (keys === 0) {\n                            orderedLobby.splice(copyLobby.length - 4 ,1,data.user)\n                        } else if (keys === 1) {\n                            orderedLobby.splice(copyLobby.length - 3 ,1,data.user)\n                        } else if (keys === 2) {\n                            orderedLobby.splice(copyLobby.length - 2 ,1,data.user)\n                        } else if (keys === 3) {\n                            orderedLobby.splice(copyLobby.length - 1 ,1,data.user)\n                        }\n                        else {\n                            orderedLobby.splice(keys - 1 ,1,data.user)\n                        }\n                    })\n                    break;\n                case 5:\n                    copyLobby.split(index, 1)\n                    orderedLobby = copyLobby.slice()\n                    copyLobby.map((data, keys) => {\n                        if (keys === 0) {\n                            orderedLobby.splice(copyLobby.length - 5 ,1,data.user)\n                        } else if (keys === 1) {\n                            orderedLobby.splice(copyLobby.length - 4 ,1,data.user)\n                        } else if (keys === 2) {\n                            orderedLobby.splice(copyLobby.length - 3 ,1,data.user)\n                        } else if (keys === 3) {\n                            orderedLobby.splice(copyLobby.length - 2 ,1,data.user)\n                        } else if (keys === 4) {\n                            orderedLobby.splice(copyLobby.length - 1 ,1,data.user)\n                        }\n                        else {\n                            orderedLobby.splice(keys - 1 ,1,data.user)\n                        }\n                    })\n                    break;\n                default:\n                    break;\n            }\n            localStorage.setItem('turn', orderedLobby)\n            localStorage.setItem('user', user)\n            localStorage.setItem('gameId', gameId)\n\n            window.location.href = \"http://135.125.101.210/game\"\n        })\n\n    }\n\n\n    render() {\n\n        if (this.state.joinedGame) {\n            return (\n                <Container fluid>\n                    <Col style={{\n                        border: '2px solid moccasin',\n                        borderRadius: '10px',\n                        backgroundColor: 'palegoldenrod'\n                    }}> {this.state.message.txt === undefined ? <a></a> : this.showMessage()}\n                        <Row>\n                            <h4>Lobby: {this.state.joinedGame}</h4>\n                            <br />\n                        </Row>\n                        <Row>\n\n                        </Row>\n\n                        <Row>\n                            <h5>Players:</h5>\n                        </Row>\n\n\n                        <Lobby\n                            userLobby={Object.values(this.state.lobby)}\n                            actionLaunchGame={this.launchGame}\n                        />\n                        <br />\n                        <Row>\n                            <Container fluid>\n                                <Row className=\"justify-content-md-center\">\n                                    <Col fluid>\n                                        <Button variant=\"outline-info\" onClick={this.handleLeave} block>Leave</Button>\n                                    </Col>\n                                    <Col fluid>\n                                        {this.state.playerToken === 1 ? this.state.lobby.length >= 4 ? <Button variant=\"outline-info\" onClick={() => this.launchGame()} block> Start Game </Button> : <Button variant=\"outline-secondary\" block disabled> Start Game </Button> : <p></p>}\n                                    </Col>\n                                </Row>\n                            </Container>\n                        </Row>\n                    </Col>\n                </Container>\n            )\n        }\n\n        else if (this.state.createGame) {\n            return (\n                <Container>\n                    <Col style={{\n                        border: '2px solid moccasin',\n                        borderRadius: '10px',\n                        backgroundColor: 'palegoldenrod'\n                    }}> {this.state.message.txt === undefined ? <a></a> : this.showMessage()}\n\n                        <Row>\n                            <Container>\n                                <Col>\n                                    <h2>Create a game</h2>\n                                    <br /><br />\n\n\n                                    <form onSubmit={this.handleCreate}>\n\n                                        <label>\n                                            <p>Lobby's name :</p>\n                                            <input type=\"text\" value={this.state.gameId} onChange={text => this.setState({ gameId: text.target.value })}                />\n                                        </label>\n                                        <br /><br />\n\n                                        <label>\n                                            <p>Amount of player : </p>\n                                            <Select options={options} value={this.state.maxPlayers} onChange={value => this.setState({ maxPlayers: value                })} />\n                                        </label>\n                                        <br /><br />\n                                        <input type=\"submit\" value=\"Create lobby\" />\n                                        <Button variant=\"outline-info\" size=\"lg\" onClick={() => this.handleExitCreate()}>exit</Button>\n                                    </form>\n\n\n\n                                </Col>\n                            </Container>\n                        </Row>\n                    </Col>\n                </Container>\n            );\n        }\n\n        else {\n            return (\n                <Container fluid>\n                    <Col style={{\n                        border: '2px solid moccasin',\n                        borderRadius: '10px',\n                        backgroundColor: 'palegoldenrod'\n                    }}> {this.state.message.txt === undefined ? <a></a> : this.showMessage()}\n                        <Row>\n                            <Button\n                                variant=\"outline-info\"\n                                size=\"lg\"\n                                onClick={() => this.handleLobby()}\n                            >\n                                Create Game\n                            </Button>\n\n\n                            <br />\n                        </Row>\n                        <Col>\n                            <Row>\n                                <form onSubmit={this.handleSubmit}>\n\n                                    <Row>\n                                        <h4>Join with a code</h4>\n                                        <br />\n                                    </Row>\n\n                                    <input type=\"text\" value={this.state.gameCode} onChange={text => this.setState({ gameCode: text.target.value })} />\n\n                                    <input type=\"submit\" value=\"Enter Game\" />\n                                </form>\n                            </Row>\n                        </Col>\n                        <Row>\n\n                            <Col>\n                                <Row>\n                                    <h4>Find games</h4>\n                                    <br />\n                                </Row>\n\n                                {this.state.pool === undefined ? <br /> : <Pool\n                                    pool={this.state.pool}\n                                    actionJoin={this.handleJoin}\n                                />}\n\n                            </Col>\n\n                        </Row>\n                    </Col>\n                </Container>\n            )\n        }\n\n\n    }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}